View(parcels)
#Size of the raster
nrow <- 10
ncol <- 10
tab <- nrow * ncol
temp <- raster(nrow=nrow,ncol =ncol)
#Create a planning unit
#Risk of clearing
set.seed(2022)
risk <- setValues(temp, round(runif(n = tab, min=0, max=1),2))
plot(risk)
#Scenario of post-1 decade loss (1000 units)
loss_2030 <- 1000
#Convert relative likelihood to absolute loss
risk_absolute <- round(risk/sum(risk[!is.na(risk)])*1000,2)
plot(risk_absolute)
#Habitat Richness
set.seed(2023)
habitat <- setValues(temp, round(runif(n=tab, min=0, max =1),2))
plot(habitat)
#Vegetation type
set.seed(2025)
#Random veg class values
veg_values <- seq(1,10,1)
veg_values <- sample(veg_values, size = tab, replace = T)
vegetation <- setValues(temp,veg_values)
unique(vegetation)
plot(vegetation)
text(vegetation)
#Cost Data
set.seed(2024)
cost <- setValues(temp, round(runif(n=tab, min=100, max = 500)))
plot(cost)
#Use the costs as the base data
parcels <- rasterToPolygons(cost) %>%
st_as_sf() %>%
transmute(cost = layer,
risk_absolute = exact_extract(risk_absolute,.,fun='mean'),
vegetation = exact_extract(vegetation,.,fun = "mode"),
habitat = exact_extract(habitat,.,fun='mean'))
plot(parcels)
total_cost_all_parcels <- cellStats(cost, "sum")
total_cost_all_parcels
#Imagine the budget of the organization 2 % of the cost
available_budget <- total_cost_all_parcels * 0.02
available_budget
#Objective to avoid 10% of loss in the landscape
avoid <- 0.10 * loss_2030
avoid
View(parcels)
layers <- c("cost","risk_absolute","vegetation","habitat","solution_1")
labelfun <- function(x){
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$cost)
}
plots <- layers %>% walk(labelfun)
plot(vegetation)
text(vegetation)
#Need to give each vegetation in a single layer
vect <- 1:10
classify <- function(x) {
img <- vegetation
img <- clamp(img, lower=x, upper=x, useValues = F)
}
vegstack <- vect %>%
map(classify) %>%
set_names(str_c("veg",vect)) %>%
stack()
#Check value 10
plot(vegstack[[10]])
plot(vegstack)
p_veg_only <- problem(parcels, features = vegstack,
cost_column = "cost") %>%
add_min_set_objective() %>%
add_relative_targets(0.15)
s_veg_only <- solve(p_veg_only)
check <- s_veg_only %>% filter(solution_1==1)
layers <- c("cost","risk_absolute","vegetation","habitat","solution_1")
labelfun <- function(x){
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$cost)
}
plots <- layers %>% walk(labelfun)
c <- s_veg_only[,"solution_1"]
plot(st_geometry(c))
text(st_coordinates(st_centroid(c)), labels = c$solution_1)
ggplot(s_veg_only) +
geom_sf(aes(fill = solution_1))+
geom_sf_label(aes(label = solution_1))+
theme_minimal()
labelfun <- function(x){
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$cost)
}
plots <- layers %>% walk(labelfun)
plots <- layers %>% walk(labelfun)
labelfun <- function(x){
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$x)
}
plots <- layers %>% walk(labelfun)
plots <- layers %>% map(labelfun)
View(plots)
labelfun <- function(x){
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$x)
p1 <- recordPlot()
}
plots <- layers %>% map(labelfun)
View(plots)
plots
plots[[1]]
plots[1]
View(plots)
plot(st_geometry(s_veg_only))
text(st_coordinates(st_centroid(s_veg_only)), labels = s_veg_only$cost)
p1 <- recordPlot()
p1
p1
plots <- layers %>% map(labelfun)
plots
View(plots)
plots[1]
plots[[1]]
p1
ggplot(s_veg_only) +
geom_sf(aes(fill = solution_1))+
geom_sf_label(aes(label = solution_1))+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
geom_sf_label(aes(label = cost))+
theme_minimal()
?geom_sf_label
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
geom_sf_text(aes(label = cost))+
theme_minimal()
View(parcels)
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_continuous()+
geom_sf_text(aes(label = cost))+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_continuous()+
geom_sf_text(aes(label = cost))+
theme(legend.position = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_continuous()+
geom_sf_text(aes(label = cost))+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_continuous()+
geom_sf_text(aes(label = cost))+
labs(title = cost)+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_continuous()+
geom_sf_text(aes(label = cost))+
labs(title = "cost")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_scico(palette = "roma")+
geom_sf_text(aes(label = cost))+
labs(x="",y = "",title = "cost")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = cost))+
labs(x="",y = "",title = "cost")+
guides(fill = "none")+
theme_minimal()
plot_fun <- ggplot(x) +
geom_sf(aes(fill = y))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = y))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
plot_fun <- ggplot(x) +
geom_sf(aes(fill = y))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = y))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
plot_fun <- function(x) {
ggplot(s_veg_only) +
geom_sf(aes(fill = x))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
plotlist <- layers %>% map(plot_fun)
plot_grid(plotlist)
View(plotlist)
plot_grid(plotlist = plotlist))
plot_grid(plotlist = plotlist)
plots <- layers %>% map(plot_fun)
plot_grid(plotlist = plots)
plot(plots[[1]])
plot(plots[[2]])
plots <- "cost" %>% map(plot_fun)
plots
x <- "cost"
ggplot(s_veg_only) +
geom_sf(aes(fill = x))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
ggplot(s_veg_only) +
geom_sf(aes(fill = x))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = x))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))
ggplot(s_veg_only) +
geom_sf(aes(fill = x))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes(fill = {{cost}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
ggplot(s_veg_only) +
geom_sf(aes(fill = {{cost}}))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes(fill = {{cost}}))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)
x <- "cost"
library(rlang)
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))
ggplot(s_veg_only) +
geom_sf(aes(fill = cost))
x <- "cost"
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = x))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
plots <- layers %>% map(plot_fun)
plot_grid(plotlist = plots)
View(plots)
plots[[1]]
plot_fun <- function(x) {
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = {{x}}))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
plots <- layers %>% map(plot_fun)
plots[[1]]
plot_grid(plotlist = plots)
View(parcels)
?plot_grid
plot_grid(plotlist = plots, nrow=4)
plot_grid(plotlist = plots, nrow=6)
plot_grid(plotlist = plots, nrow=2)
s_veg_only
plots[[3]]
plots[[2]]
View(parcels)
s_veg_only <- s_veg_only %>% mutate(across(where(is.numeric), round,2))
plot_fun <- function(x) {
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = {{x}}))+
labs(x="",y = "")+
guides(fill = "none")+
theme_minimal()}
plots <- layers %>% map(plot_fun)
plot_grid(plotlist = plots, nrow=2)
plot_fun <- function(x) {
ggplot(s_veg_only) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = {{x}}))+
labs(x="",y = "", title = x)+
guides(fill = "none")+
theme_minimal()}
plots <- layers %>% map(plot_fun)
plot_grid(plotlist = plots, nrow=2)
plot_fun <- function(solution,x) {
ggplot(solution) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = {{x}}))+
labs(x="",y = "", title = x)+
guides(fill = "none")+
theme_minimal()}
plots <- c(s_veg_only,layers) %>% map(plot_fun)
plot_fun <- function(solution,x) {
ggplot({{solution}}) +
geom_sf(aes_string(fill = {{x}}))+
scale_fill_scico(palette = "roma", direction=-1)+
geom_sf_text(aes_string(label = {{x}}))+
labs(x="",y = "", title = x)+
guides(fill = "none")+
theme_minimal()}
plots <- c(s_veg_only,layers) %>% map(plot_fun)
p
plots[[2]]
plot_grid(plotlist = plots, nrow=2)
#Need to set manual target
combined_target <- data.frame(
feature = c("risk_absolute","vegetation"),
type = c("absolute","relative"),
sense = c("=",">="),
target = c(100, 0.20)
)
combined_target
names(risk_absolute) <- "risk_absolute"
names(vegetation) <- "vegetation"
stacked <- stack(risk_absolute,vegetation)
plot(stacked)
priority_vege_impact <-
problem(parcels, features = stacked, cost_column = "cost") %>%
add_min_set_objective() %>%
add_manual_targets(combined_target)
p_vege_impact <-
problem(parcels, features = stacked, cost_column = "cost") %>%
add_min_set_objective() %>%
add_manual_targets(combined_target)
s_vege_impact <- solve(p_vege_impact)
vegetation
combined_target
names(vegstack)
#Need to set manual target
veg_target <- data.frame(
feature = names(vegstack),
type = "relative"
)
veg_target
#Need to set manual target
veg_target <- data.frame(
feature = names(vegstack),
type = "relative",
sense = (">="),
target = 0.20
)
veg_target
#Need to set manual target
veg_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = "relative",
sense = (">="),
target = 0.20
)
veg_target
#Need to set manual target
veg_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = c("absolute","relative"),
sense = (">="),
target = 0.20
)
?rep
#Need to set manual target
veg_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = c("absolute", rep("relative",10)),
sense = (">="),
target = 0.20
)
veg_target
length(vegstack)
layer(vegstack)
nlayer(vegstack)
len(vegstack)
nrow(vegstack)
#Need to set manual target
veg_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = c("absolute", rep("relative",nrow(vegstack))),
sense = c("=", rep(">=",nrow(vegstack))),
target = c(100, rep(0.2,nrow(vegstack)))
)
veg_target
names(risk_absolute)
names(vegstack)
stacked <- stack(risk_absolute,vegstack)
plot(stacked)
p_vege_impact <-
problem(parcels, features = stacked, cost_column = "cost") %>%
add_min_set_objective() %>%
add_manual_targets(combined_target)
names(stacked)
View(parcels)
View(combined_target)
#Need to set manual target
combined_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = c("absolute", rep("relative",nrow(vegstack))),
sense = c("=", rep(">=",nrow(vegstack))),
target = c(100, rep(0.2,nrow(vegstack)))
)
combined_target
p_vege_impact <-
problem(parcels, features = stacked, cost_column = "cost") %>%
add_min_set_objective() %>%
add_manual_targets(combined_target)
s_vege_impact <- solve(p_vege_impact)
#Need to set manual target
combined_target <- data.frame(
feature = c("risk_absolute",names(vegstack)),
type = c("absolute", rep("relative",nrow(vegstack))),
sense = c("=", rep(">=",nrow(vegstack))),
target = c(100, rep(0.1,nrow(vegstack)))
)
stacked <- stack(risk_absolute,vegstack)
names(stacked)
p_vege_impact <-
problem(parcels, features = stacked, cost_column = "cost") %>%
add_min_set_objective() %>%
add_manual_targets(combined_target)
s_vege_impact <- solve(p_vege_impact)
#Random veg class values #Create 5 vegetation classes
veg_values <- seq(1,5,1)
veg_values <- sample(veg_values, size = tab, replace = T)
veg_values
vegetation <- setValues(temp,veg_values)
nrow <- 10
ncol <- 10
tab <- nrow * ncol
temp <- raster(nrow=nrow,ncol =ncol)
vegetation <- setValues(temp,veg_values)
#Random veg class values #Create 5 vegetation classes
veg_values <- seq(1,5,1)
veg_values <- sample(veg_values, size = tab, replace = T)
vegetation <- setValues(temp,veg_values)
vegetation
#Create a rasterstack of vegetation types
vect <- 1:5
classify <- function(x) {
img <- vegetation
img <- clamp(img, lower=x, upper=x, useValues = F)
}
vegstack <- vect %>%
map(classify) %>%
set_names(str_c("veg",vect)) %>%
stack()
plot(vegstack)
gc()
